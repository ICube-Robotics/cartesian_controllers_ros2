controller_manager:
  ros__parameters:
    update_rate: 225  # Hz

    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

    cartesian_admittance_controller:
      type: cartesian_admittance_controller/CartesianAdmittanceController

cartesian_admittance_controller:
  ros__parameters:
    command_interfaces:
      - position
    state_interfaces:
      - position
      - velocity
    joints:
      - joint_a1
      - joint_a2
      - joint_a3
      - joint_a4
      - joint_a5
      - joint_a6
      - joint_a7

    kinematics:
      plugin_name: kinematics_interface_kdl/KinematicsInterfaceKDL
      plugin_package: kinematics_interface
      base: iiwa_base # Assumed to be stationary
      tip: interaction_point
      group_name: arm
      alpha: 0.0005

    ft_sensor:
      name: ftsensor
      frame:
        id: ft_sensor  # tool0 Wrench measurements are in this frame
        external: false # force torque frame exists within URDF kinematic chain
      filter_coefficient: 0.005

    control:
      frame:
        id: interaction_point # Admittance calcs (displacement etc) are done in this frame. Usually the tool or end-effector
        external: false # control frame exists within URDF kinematic chain

    fixed_world_frame:   # Gravity points down (neg. Z) in this frame (Usually: world or base_link)
      frame:
        id: iiwa_base # Admittance calcs (displacement etc) are done in this frame. Usually the tool or end-effector
        external: false # control frame exists within URDF kinematic chain

    gravity_compensation:
      frame:
        id: ft_sensor
        external: false

      CoG: # specifies the center of gravity of the end effector
        pos:
          - 0.0015 # x
          - 0.0001 # y
          - 0.0371 # z
        force: 1.0 # mass * 9.81

    admittance:
      frame:
        id: interaction_point # Admittance calcs (displacement etc) are done in this frame. Usually the tool or end-effector
        external: false # control frame exists within URDF kinematic chain
      # Admittance rule
      plugin_name: cartesian_admittance_controller/VanillaCartesianAdmittanceRule
      plugin_package: cartesian_admittance_controller

      selected_axes:
        - true # x
        - true # y
        - true # z
        - true # rx
        - true # ry
        - true # rz

      # Having ".0" at the end is MUST, otherwise there is a loading error
      # F = M*a + D*v + S*(x - x_d)
      inertia:
        - 5.0
        - 5.0
        - 5.0
        - 2.0
        - 2.0
        - 2.0

      damping_ratio: # damping can be used instead: zeta = D / (2 * sqrt( M * S ))
        - 1.0 # x
        - 1.0 # y
        - 1.0 # z
        - 1.0 # rx
        - 1.0 # ry
        - 1.0 # rz

      stiffness:
        - 200.0
        - 200.0
        - 200.0
        - 50.0
        - 50.0
        - 50.0
